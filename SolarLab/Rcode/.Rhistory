carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=d))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity")
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.5))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col="red"))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[22]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1],fill=COL[1]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
library(ggplot2)
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7],fill=COL[7]))
g
?COL()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.5))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.3))
g
?Rmarkdown
?markdown
knit_engines$set()
?cat
qnorm(-3.7,0,1.7)
pnorm(-3.7,0,1.7)
?swirl
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
?InstallCourses
install_from_swirl(Getting and Cleaning Data, dev = FALSE, mirror = "github")
install_from_swirl(Getting_and_Cleaning_Data, dev = FALSE, mirror = "github")
SWIRL()
swirl()
7/(200000/10000)
7/(10000/200000)
pi()
pi
pi * (6371e6)^2*0.0323/8130
pi * (6371e6)^2*0.0323/(0.7*8130)
pi * (6371e3)^2*0.0323/(0.7*8130)
4*pi * (6371e3)^2*0.0323/(0.7*8130)
(4)*pi * (6371e3)^2*0.0323/(0.7*8130))/1e9
(4*pi * (6371e3)^2*0.0323/(0.7*8130))/1e9
install.packages("circular")
library(circular)
source('~/.active-rstudio-document')
par(1,1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?circular
?windrose
dir <- circular(runif(100, 0, 360), units="degrees")
mag <-  rgamma(100, 15)
sample <- data.frame(dir=dir, mag=mag)
par(mfrow=c(2,2))
res <- windrose(sample)
## we join two pedals and keep the same shrink (scale of the plot)
breaks <-circular(seq(0, 2 * pi, by = pi/6))
breaks <- breaks[-2]
windrose(sample, breaks=breaks, main="The same but with two pedals joined",
shrink=res$shrink)
dir <- circular(runif(100, 0, 360), units="degrees")
mag <-  rgamma(100, 15)
sample <- data.frame(dir=dir, mag=mag)
par(mfrow=c(1,1))
res <- windrose(sample)
library(openintro)
data(COL)
COL
res <- windrose(sample)
res <- windrose(sample,fill.col=c("#569BBD","#F05133"))
res <- windrose(sample,fill.col=c("#569BBDC0","#F05133C0"))
?Constants
5.67e-8 * 223^4
5.67e-8 * 255^4
0.4*1370/4
dweights1=c(30.23,8.94,29.56,19.69,12.16,15.47,8.4,8.78,15.76,14.15)
dweights2=c(14.4,21.09,16.51,16.41,20.15,16.09,13.48,10.62,11.28,14.27)
allweights=c(dweights1,dweights2)
summaary(allweights)
summary(allweights)
summary(dweights1)
summary(dweights2)
summary(allweights)
hist(allweights)
hist(allweights)
qqnorm(allweights)
qqline(allweights)
103/.6
.6*172
96*74
96*6
576*5
demo(plotmath)
demoPlotmath
demo(plotmath)
paste(expression(x %+-% y),"=",3)
expression(x %+-% y)
text(expression(x %+-% y))
sessionInfo()
library(Biobase)
source("http://www.bioconductor.org/biocLite.R")
biocLite()
install_github("genomicsclass/ph525x")
library(devtools)
install_github("genomicsclass/ph525x")
source("http://www.bioconductor.org/biocLite.R")
library(BiocInstaller)
biocLite("Biobase")
biocLite("genefu")
library(devtools)
install_github("genomicsclass/ph525x")
install_github("genomicsclass/ph525x")
library(Biobase)
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(devtools)
library(IRanges)
install_github("genomicsclass/ph525x")
sessionInfo()
library(BiocInstaller)
biocLite("Homo.sapiens")
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(BiocInstaller)
biocLite("geuvPack")
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
setwd("H:/Rspace/RE_Community/SolarLab/Rcode")
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
rm(list=ls())
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
qqnorm(powerop$balance)
qqline(powerop$balance)
mypar(3,1)
hist(powerop$demand)
hist(powerop$totalop)
hist(powerop$balance)
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
solarop=solarMWp*data$s/1000
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
windPower
table(data$w)
wtest<-windMW*windPower[which(windPower$v==data$w[i]),2]
identical(windop,wtest)
head(windop)
head(wtest)
wtest<-windMW*windPower[which(windPower$v==data$w),2]
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
windPower
which(windPower$v==9)
windPower[which(windPower$v==9),2]
windPower[which(windPower$v==data$w),2]
windop<-sapply(data$w,function(x){
windMW*windPower[which(windPower$v==x),2]
})
solarop=solarMWp*data$s/1000
totalop<-windop+solarop
balance<-totalop-demand
powerop<-data.frame(windop,solarop,totalop,demand,balance)
summary(powerop)
library(rafalib)
mypar(2,1)
days<-seq(1,1000)/144
plot(days,powerop$demand[1:1000],type="l",
ylim=c(-12,12),
xlab="Winter days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[1:1000],col="red")
lines(days,powerop$windop[1:1000],col="blue")
lines(days,powerop$balance[1:1000],col="green")
plot(days,powerop$demand[25001:26000],type="l",
ylim=c(-12,12),
xlab="Summer days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[25001:26000],col="red")
lines(days,powerop$windop[25001:26000],col="blue")
lines(days,powerop$balance[25001:26000],col="green")
mypar(3,1)
hist(powerop$demand)
hist(powerop$totalop)
hist(powerop$balance)
summary(windop)
windop<-sapply(data$w,function(x){
windMW*windPower[which(windPower$v==x),2]
})
head(windop)
head(unlist(windop))
head(unlist(windop)/20)
head(data$w)
hist(data$w)
head(data$w,100)
length(data$w)
length(unlist(windop))
table(unlist(windop))
windop<-unlist(sapply(data$w,function(x){
windMW*windPower[which(windPower$v==x),2]
}))
solarop=solarMWp*data$s/1000
totalop<-windop+solarop
balance<-totalop-demand
powerop<-data.frame(windop,solarop,totalop,demand,balance)
summary(powerop)
windPower
windpower[22:25,1:2]=c(21,1.0)
windPower[22:25,1:2]=c(21,1.0)
windop<-unlist(sapply(data$w,function(x){
windMW*windPower[which(windPower$v==x),2]
}))
solarop=solarMWp*data$s/1000
totalop<-windop+solarop
balance<-totalop-demand
powerop<-data.frame(windop,solarop,totalop,demand,balance)
summary(powerop)
windPower
windpower[22:25,1]=c(21,22,23,25)
windPower[22:25,1]=c(21,22,23,25)
windPower
windPower[22:25,1]=c(21,22,23,24)
windPower[22:25,2]=1.0
windPower
windop<-unlist(sapply(data$w,function(x){
windMW*windPower[which(windPower$v==x),2]
}))
solarop=solarMWp*data$s/1000
totalop<-windop+solarop
balance<-totalop-demand
powerop<-data.frame(windop,solarop,totalop,demand,balance)
summary(powerop)
library(rafalib)
mypar(2,1)
days<-seq(1,1000)/144
plot(days,powerop$demand[1:1000],type="l",
ylim=c(-12,12),
xlab="Winter days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[1:1000],col="red")
lines(days,powerop$windop[1:1000],col="blue")
lines(days,powerop$balance[1:1000],col="green")
plot(days,powerop$demand[25001:26000],type="l",
ylim=c(-12,12),
xlab="Summer days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[25001:26000],col="red")
lines(days,powerop$windop[25001:26000],col="blue")
lines(days,powerop$balance[25001:26000],col="green")
mypar(3,1)
hist(powerop$demand)
hist(powerop$totalop)
hist(powerop$balance)
write.csv(windPower,"../data/specs/windPowerCurve.csv",row.names=FALSE,header=FALSE)
write.csv(windPower,"../data/specs/windPowerCurve.csv",row.names=FALSE,headers=FALSE)
?write.csv
write.csv(windPower,"../data/specs/windPowerCurve.csv",row.names=FALSE,col.names = =FALSE)
write.csv(windPower,"../data/specs/windPowerCurve.csv",row.names=FALSE,col.names = FALSE)
write.table(windPower,"../data/specs/windPowerCurve.csv",row.names=FALSE,col.names = FALSE)
windPower<-read.csv("../data/specs/windPowerCurve.csv")
windPower
windPower<-read.table("../data/specs/windPowerCurve.csv",col.names=FALSE,sep=",")
windPower
?read.table
windPower<-read.table("../data/specs/windPowerCurve.csv",header=FALSE,sep=",")
windPower
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
windPower
solarop<-numeric(length=length(data))
windop<-numeric(length=length(data))
windop<-unlist(sapply(data$w,function(x){
windMW*windPower[which(windPower$v==x),2]
}))
summary(windop)
dim(windPower)
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
windPower
windop<-unlist(sapply(data$w,function(x){
windMW*windPower[which(windPower$v==x),2]
}))
sumary(windop)
summary(windop)
windop<-unlist(sapply(data$w,function(x){
windMW*windPower[which(windPower[,1]==x),2]
}))
summary(windop)
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
str(wdata)
str(sdata)
wdata<-read.csv(wfilename)[,2]
str(wdata)
rm(list=ls())
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
summary(powerop)
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
library(rafalib)
mypar(3,1)
days<-seq(1,1000)/144
plot(days,powerop$demand[1:1000],type="l",
ylim=c(-12,12),
xlab="Winter days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[1:1000],col="red")
lines(days,powerop$windop[1:1000],col="blue")
lines(days,powerop$balance[1:1000],col="green")
plot(days,powerop$demand[25001:26000],type="l",
ylim=c(-12,12),
xlab="Summer days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[25001:26000],col="red")
lines(days,powerop$windop[25001:26000],col="blue")
lines(days,powerop$balance[25001:26000],col="green")
ydays<-seq(1,length(ebalance))/144
plot(ydays,ebalance)
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
library(rafalib)
mypar(3,1)
days<-seq(1,1000)/144
plot(days,powerop$demand[1:1000],type="l",
ylim=c(-12,12),
xlab="Winter days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[1:1000],col="red")
lines(days,powerop$windop[1:1000],col="blue")
lines(days,powerop$balance[1:1000],col="green")
plot(days,powerop$demand[25001:26000],type="l",
ylim=c(-12,12),
xlab="Summer days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[25001:26000],col="red")
lines(days,powerop$windop[25001:26000],col="blue")
lines(days,powerop$balance[25001:26000],col="green")
ydays<-seq(1,length(ebalance))/144
plot(ydays,ebalance,type="l")
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
res
hist(res[1,])
res<-t(res)
summary(res)
?hist
library(rafalib)
mypar(4,1)
hist(res[,1],breaks=10)
hist(res[,2],breaks=10)
hist(res[,3],breaks=10)
hist(res[,4],breaks=10)
mypar(3,1)
days<-seq(1,1000)/144
plot(days,powerop$demand[1:1000],type="l",
ylim=c(-12,12),
xlab="Winter days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[1:1000],col="red")
lines(days,powerop$windop[1:1000],col="blue")
lines(days,powerop$balance[1:1000],col="green")
plot(days,powerop$demand[25001:26000],type="l",
ylim=c(-12,12),
xlab="Summer days",
ylab="Power (MW)"
)
lines(days,powerop$solarop[25001:26000],col="red")
lines(days,powerop$windop[25001:26000],col="blue")
lines(days,powerop$balance[25001:26000],col="green")
ydays<-seq(1,length(ebalance))/144
plot(ydays,ebalance,type="l")
mypar(3,1)
days<-seq(1,1000)/144
plot(days,demand[1:1000],type="l",
ylim=c(-12,12),
xlab="Winter days",
ylab="Power (MW)"
)
lines(days,solarop[1:1000],col="red")
lines(days,windop[1:1000],col="blue")
lines(days,balance[1:1000],col="green")
plot(days,demand[25001:26000],type="l",
ylim=c(-12,12),
xlab="Summer days",
ylab="Power (MW)"
)
lines(days,solarop[25001:26000],col="red")
lines(days,windop[25001:26000],col="blue")
lines(days,balance[25001:26000],col="green")
ydays<-seq(1,length(ebalance))/144
plot(ydays,ebalance,type="l")
mypar(3,1)
hist(demand)
hist(totalop)
hist(balance)
res
hist(demand)
max(demand)
min(totalop)
sum(totalop==0)
summary(totalop,demand)
summary(totalop);symmary(demand)
summary(totalop);summary(demand)
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
res
wp<-function(x){
windMW*windPower[which(windPower[,1]==x),2]
}
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
wfile<-floor(100*runif(1)+1)
sfile<-floor(100*runif(1)+1)
print(paste("Trial: ",trial," Solar file:",sfile,", Wind file: ",wfile,sep=" "))
wfilename<-ipfilename(wfile,wipfilepathstem,wipfilepathtail)
sfilename<-ipfilename(sfile,sipfilepathstem,sipfilepathtail)
wdata<-read.csv(wfilename)[,2]
wp(wdata)
sapply(wdata,wp(wdata))
wp<-function(x){
windMW*windPower[which(windPower[,1]==x),2]
}
sapply(wdata,wp)
source('H:/Rspace/RE_Community/SolarLab/Rcode/EnergySim.R')
res
