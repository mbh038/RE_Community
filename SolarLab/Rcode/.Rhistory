plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=sum(diag(tab))/sum(tab)
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(sum(tab)-sum(diag(tab)))/sum(tab)
}
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
plot(FPR,TPR,type=l)
plot(FPR,TPR,type="l")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="blue")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
maxthresh=0.5
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=maxthresh*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue",xlab="threshold",ylab="Error rate")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
maxthresh=0.5
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=maxthresh*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue",xlab="threshold",ylab="Error rate")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue",xlab="threshold",ylab="Error rate")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue",main="ROC curve")
str(lda.pred)
str(lda.pred$posterior)
summary(lda.pred$posterior)
library(pROC)
> auc(default$default, lda.pred)
library(pROC)
auc(Default$default, lda.pred)
install.packages("pROC")
library(pROC)
auc(Default$default, lda.pred)
library(pROC)
auc(Default$default, lda.pred$class)
str(lad.pred)
str(lda.pred)
str(Default)
roc(lda.class,lda.pred$posterior[,2])
roc(lda.class,lda.pred$posterior[,1])
roc(Default$default,lda.pred$posterior[,1])
roc(Default$default,lda.pred$posterior[,2])
roc(Default$default,lda.pred$posterior[,1])
auc(Default$default, lda.pred$posterior[,1])
roc_curve<-roc(Default$default,lda.pred$posterior[,1])
plot(roc_curve)
auc(Default$default, lda.pred$posterior[,1])
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction="<")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
library(pROC)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
#plot(roc_curve)
auc(Default$default, lda.pred$posterior[,1])
?dbinom()
hist(dbinom(62,100,.6))
hist(dbinom(62,100,.6))
dbinom(62,100,.6)
?binom()
?dbinom()
rbinom(100,100,62)
rbinom(100,1,62)
x<-seq(1,100)
dbinom(x,62,.6)
plot(dbinom(x,62,.6))
plot(dbinom(x,100,.6))
dave<-0.7
carloe<-0.6
x<-seq(1,100)
plot(dbinom(x,100,dave))
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
d<-data.frame(z,dbinom(x,size,dave),dbinom(x,size,carole))
d<-data.frame(x,dbinom(x,size,dave),dbinom(x,size,carole))
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_hist()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_histogram()
g
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=d))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity")
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.5))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col="red"))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[22]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1],fill=COL[1]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
library(ggplot2)
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7],fill=COL[7]))
g
?COL()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.5))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.3))
g
?Rmarkdown
?markdown
knit_engines$set()
?cat
qnorm(-3.7,0,1.7)
pnorm(-3.7,0,1.7)
?swirl
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
?InstallCourses
install_from_swirl(Getting and Cleaning Data, dev = FALSE, mirror = "github")
install_from_swirl(Getting_and_Cleaning_Data, dev = FALSE, mirror = "github")
SWIRL()
swirl()
7/(200000/10000)
7/(10000/200000)
floor(100)/2
cpm<-seq(1,100)
cpm
setwd("H:/Rspace/RE_Community/SolarLab/Rcode")
source("SolarFunctions.R")
#####################################################################
# Load data
#####################################################################
# cleaned data
#data<-readRDS("../data/cleaned/Cam2001n.csv")
data<-readRDS("../data/cleaned/solar/CamBSRN_Solar1min/Cam2014n.rds")
# sunrise and sunset times
srss<-read.csv("../data/h0times.csv",sep=",")
str(srss)
srss$sunrise<-as.integer(srss$sunrise)
srss$sunset<-as.integer(srss$sunset)
# cpm matrix for given location
cpm<-read.table("../tpm/solar/Cam_cpm.csv",sep=",")
cpm_am<-read.table("../tpm/solar/Cam_cpm_am.csv",sep=",")
cpm_pm<-read.table("../tpm/solar/Cam_cpm_pm.csv",sep=",")
# first column is the bins,so separate that off
#cpm[1,]<-NULL
bins<-cpm[,1]
cpm[,1]<-NULL
bins_am<-cpm_am[,1]
cpm_am[,1]<-NULL
bins_pm<-cpm_pm[,1]
cpm_pm[,1]<-NULL
cpm[1,]
test<-cpm[50,]
test
max(which(test<0.5))
str(test)
length(test)
names(test)<-NULL
test
max(which(test<0.5))
paste0("V",seq(1,100))
names(test)<-paste0("V",seq(1,100))
test
max(which(test<0.5))
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
colIndex
i
max(which(cpm_pm[v[i-1],]<colIndex))
which(cpm_am[v[i-1],]<colIndex)
cpm_am[v[i-1],]
cpm_am
v[i-1]
v[1]
v[2]
v[1000]
summary(v)
length(v)
k
v[srss$sunrise[k]+1]<-90
srss$sunrise[k]+1
v[srss$sunrise[k]+1]
v[srss$sunrise[k]+2]
colIndex
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
v[i-1]
head(v)
v[1:1000]
v[1001:2000]
max(which(cpm_am[v[i-1],]<colIndex))
max(which(cpm_am[v[959], ] < colIndex))
v[959]
v[1959]
max(which(cpm_am[v[1959], ] < colIndex))
max(which(cpm_am[v[1991], ] < colIndex))
max(which(cpm_am[v[1990], ] < colIndex))
colIndex
cpm_am[1,]
ncol[cpm_am]
ncol(cpm_am)
which(cpm_am[v[1990], ] < colIndex)
max(1)
max( which(cpm_am[v[1990], ] < colIndex))
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
v[srss$sunrise[k]+1]
srss$sunrise[k]+1
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
v[7679:8679]
bins
bins[0]
bins[101]
bins[98]
swd[7679:8679]
=max(which(cpm_am[1,]<colIndex))
max(which(cpm_am[1,]<colIndex))
colIndex
which(cpm_am[1,]<colIndex)
which(c(0.9,1.0)<colIndex)
which(c(0.3,0.9,1.0)<colIndex)
which(c(cpm_am[1,],1)<colIndex)
which(cbind(cpm_am[1,],1)<colIndex)
a<-which(cbind(cpm_am[1,],1)<colIndex)
a
a<-which(cbind(cpm_am[1,],0)<colIndex)
a
colIndex
cpm_am[1,]
ncol(cpm_am)
a<-which(cbind(0,cpm_am[1,])<colIndex)
a
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
a<-2
b<-7
a:b
colIndex=min(1,max(0.1,rnorm(1,0,rsd)+rmean))
colIndex
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
sys.time()
Sys.time()
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
source('H:/Rspace/RE_Community/SolarLab/Rcode/SolarMarkov.R')
v[i]=max(which(cbind(0,cpm_am[v[i-1],])<colIndex))
v[i]
