#   x*unlist(sapply(wdata,wp))
# })
solarop<-solarMWp*sdata/1000
# solarop<-sapply(solarMWp,function (x){
#   x*sdata/1000
# })
totalop<-windop+solarop
balance<-totalop-demand# sweep(totalop,1,demand,FUN="-") #totalop-demand
ebalance<-cumsum(balance)/6000 # in GWh
#powerop<-data.frame(windop,solarop,totalop,demand,balance,ebalance)
# summary(powerop)
#diff<-proc.time()-start
#print(diff)
c(min(balance),max(balance),min(ebalance),max(ebalance))
})
res<-t(res)
res
library(rafalib)
mypar(4,1)
hist(res[,1],breaks=50,main="min pbalance")
hist(res[,2],breaks=50,main="max pbalance")
hist(res[,3],breaks=50,main="min ebalance")
hist(res[,4],breaks=50,main="max ebalance")
summary(res)
setwd("H:/Rspace/RE_Community/SolarLab/Rcode")
source('H:/Rspace/RE_Community/SolarLab/Rcode/UKERC.r')
source('H:/Rspace/RE_Community/SolarLab/Rcode/UKERC.r')
# EESP demand file names
demfilepathstem<-"../data/profiles/EESP/"
demfilepathtail<-"DomesticDemand.csv"
demMonths<-c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
mdem<-data.frame()
dem5<-data.frame()
# loop over monthly 5 minute EESP demand files
for (month in demMonths){
demfilename<-paste0(demfilepathstem,month,demfilepathtail)
#print(demfilename)
mdem<-read.table(demfilename,stringsAsFactors=FALSE,sep=",",header=FALSE)
mday=nrow(mdem[!is.na(mdem[,3]),])/(24*12)
#print (mday)
dem5<-rbind(dem5,mdem[!is.na(mdem[,3]),][,2:3])
#print(length(dem))
}
path<-"../data/profiles/UKERC/"
source('H:/Rspace/RE_Community/SolarLab/Rcode/UKERC.r')
days
daytypes<-unique(days[,2])
daytypes
days<-read.csv(paste0(path,file),stringsAsFactors=FALSE)
daytypes<-unique(days[,2])
daytypes
length(daytypes)
setwd("H:/Rspace/RE_Community/SolarLab/Rcode")
#choose the day
day<-1
# choose the latitude
phi=(pi/180)*0
S0=1000
t=seq(1,366,length.out=365*288)
daybegin<-day*288
dayend<-(day+1)*288
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
for (lat in seq(10,60,10)){
phi=(pi/180)*lat
Q<-solarFlux(S0,phi,t)
lines(t[daybegin:dayend],Q[daybegin:dayend],type="l",col=lat/10)
}
grid(col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
# declination angle
deltaOdot<-function(t){
# t is the time in day number 1-365
asin(sin(-0.4091)*cos((2*pi/365.24)*(t+10)+0.0334*sin((2*pi/365.24)*(t-2))))
}
# hour angle at sunrise and sunset
h0<-function(phi,t){
acos(tan(phi)*tan(deltaOdot(t)))
}
# cosine of zenith angle
cosTheta<-function(phi,delta,h){
# theta is the zenith angle
sin(phi)*sin(delta)+cos(phi)*cos(delta)*cos(h)
}
solarFlux<-function(S0,phi,t){
h<-pi*(2*(t-floor(t))-1)
delta<-deltaOdot(t)
flux<-S0*cosTheta(phi,delta,h)
flux<-pmax(flux,rep(0,length(t)))
flux
}
phi=(pi/180)*50
t=seq(1,365,length.out=365*288)
plot(t,180*deltaOdot(t)/pi,typ="l",ylab="delta",xlab="Day of year")
t=seq(1,365,length.out=360*288)
phi=(pi/180)*0.01
h0s<-h0(phi,t)
plot(t,24*(pi-h0s)/pi,type="l",ylim=c(0,20),xlab=("day of the year"),ylab=("daylight time (hours)"),
main=("daylight time for latitudes 0 to 60N"))
for (lat in seq(10,60,10)){
phi=(pi/180)*lat
h0s<-h0(phi,t)
lines(t,24*(pi-h0s)/pi,type="l",col=lat/10)
}
grid(col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
#choose the day
day<-1
# choose the latitude
phi=(pi/180)*0
S0=1000
t=seq(1,366,length.out=365*288)
daybegin<-day*288
dayend<-(day+1)*288
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
for (lat in seq(10,60,10)){
phi=(pi/180)*lat
Q<-solarFlux(S0,phi,t)
lines(t[daybegin:dayend],Q[daybegin:dayend],type="l",col=lat/10)
}
grid(col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
#choose the day
day<-1
# choose the latitude
phi=(pi/180)*0
S0=1000
t=seq(1,366,length.out=365*288)
daybegin<-day*288
dayend<-(day+1)*288
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
#choose the day
day<-1
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*288)
daybegin<-day*288
dayend<-(day+1)*288
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
choose the day
day<-1
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144
dayend<-(day+1)*144
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
daybegin<-daybegin+180*144
dayend<-dayend+180*144
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
library(rafalib)
mypar(2,1)
choose the day
day<-1
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144
dayend<-(day+1)*144
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
daybegin<-daybegin+180*144
dayend<-dayend+180*144
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144
dayend<-(day+1)*144
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
daybegin<-daybegin+180*144
dayend<-dayend+180*144
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
length(t)
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
daybegin<-daybegin+180*144
dayend<-dayend+180*144
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000))
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="")
legend="Sunny Day, summer"
legend("Sunny Day, summer")
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="")
legend("Sunny Day, summer")
legend(legend="Sunny Day, summer")
legend(bottomleft,legend="Sunny Day, summer")
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="")
legend(1,800,legend="Sunny Day, summer")
main="Suny day in summer"
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="")
main="Suny day in summer"
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="",main="Suny day in summer")
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",main="Sunny day in summer")
daybegin<-daybegin+180*144
dayend<-dayend+180*144
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",main="Cloudy day in winter")
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",main="Sunny day in summer")
daybegin<-daybegin+180*144
dayend<-dayend+180*144
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",main="Cloudy day in winter")
mypar(2,1)
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",main="Sunny day in summer")
daybegin<-daybegin+180*144
dayend<-dayend+180*144
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",main="Cloudy day in winter")
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-day*144+1
dayend<-(day+1)*144+1
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",ylab="Insolation (W/m^2)",main="Cloudy day in winter")
daybegin<-daybegin+180*144
dayend<-dayend+180*144
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",ylab="Insolation (W/m^2)",main="Sunny day in summer")
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-1
dayend<-365*144
Q<-solarFlux(S0,phi,t)
plot(t[daybegin:dayend],Q[daybegin:dayend],type="l",ylim=c(0,1000),xlab="Day in year",ylab="Insolation (W/m^2)",main="Cloudy day in winter")
?write.csv
write.table("clearSkyYear.csv",data=clearSkyView,row.names=FALSE,col.names=FALSE,sep=",")
write.table(clearSkyYear,file="clearSkyYear.csv",row.names=FALSE,col.names=FALSE,sep=",")
clearSkyYear<-data.frame(t,Q)
clearSkyYear
write.table(clearSkyYear,file="clearSkyYear.csv",row.names=FALSE,col.names=FALSE,sep=",")
setwd("H:/Rspace/RE_Community/SolarLab/data/Alex")
# declination angle
deltaOdot<-function(t){
# t is the time in day number 1-365
asin(sin(-0.4091)*cos((2*pi/365.24)*(t+10)+0.0334*sin((2*pi/365.24)*(t-2))))
}
# hour angle at sunrise and sunset
h0<-function(phi,t){
acos(tan(phi)*tan(deltaOdot(t)))
}
# cosine of zenith angle
cosTheta<-function(phi,delta,h){
# theta is the zenith angle
sin(phi)*sin(delta)+cos(phi)*cos(delta)*cos(h)
}
solarFlux<-function(S0,phi,t){
h<-pi*(2*(t-floor(t))-1)
delta<-deltaOdot(t)
flux<-S0*cosTheta(phi,delta,h)
flux<-pmax(flux,rep(0,length(t)))
flux
}
phi=(pi/180)*50
t=seq(1,365,length.out=365*288)
plot(t,180*deltaOdot(t)/pi,typ="l",ylab="delta",xlab="Day of year")
t=seq(1,365,length.out=360*288)
phi=(pi/180)*0.01
h0s<-h0(phi,t)
plot(t,24*(pi-h0s)/pi,type="l",ylim=c(0,20),xlab=("day of the year"),ylab=("daylight time (hours)"),
main=("daylight time for latitudes 0 to 60N"))
for (lat in seq(10,60,10)){
phi=(pi/180)*lat
h0s<-h0(phi,t)
lines(t,24*(pi-h0s)/pi,type="l",col=lat/10)
}
grid(col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
daybegin<-1
dayend<-365*144
Q<-solarFlux(S0,phi,t)
clearSkyYear<-data.frame(t,Q)
write.table(clearSkyYear,file="clearSkyYear.csv",row.names=FALSE,col.names=FALSE,sep=",")
clearskyYear<-read.csv("clearSkyYear.csv",stringAsFactors=FALSE)
clearskyYear<-read.csv("clearSkyYear.csv",stringsAsFactors=FALSE)
summary(clearSkyYear)
str(clearskyYear)
duchy<-read.csv("duchy.csv",stringsAsFactors=FALSE)
summary(duchy)
str(duchy)
csk<-read.csv("clearSkyYear.csv",stringsAsFactors=FALSE)
#choose the day
day<-0
# choose the latitude
phi=(pi/180)*50
S0=1000
t=seq(1,366,length.out=365*144)
t10min<-seq(1,52560)
daybegin<-1
dayend<-365*144
Q<-solarFlux(S0,phi,t)
clearSkyYear<-data.frame(t10min,Q)
write.table(clearSkyYear,file="clearSkyYear.csv",row.names=FALSE,col.names=FALSE,sep=",")
csk<-read.csv("clearSkyYear.csv",stringsAsFactors=FALSE)
duchy<-read.csv("duchy.csv",stringsAsFactors=FALSE)
summary(csk)
t10min<-seq(1,52560)
summary(t10min)
length(Q)
csk<-read.csv("clearSkyYear.csv",stringsAsFactors=FALSE,header=FALSE)
duchy<-read.csv("duchy.csv",stringsAsFactors=FALSE,header=FALSE)
nrow(csk)
nrow(duchy)
names(csk#)
names(csk)
names(duchy)
names(csk)=c("t10min","Sol")
names(duchy)=c("t10min","Sol")
names(duchy)
csk$day=csk$t10min %% 144
summary(csk$day)
summary(csk$t10min)
csk$day=csk$t10min %/% 144
summary(csk$t10min)
summary(csk$day)
csk[1:1000,]
csk$day=csk$t10min %/% 144 +1
summary(csk$day)
tail(csk)
head(csk)
csk$duchy=duchy$t10min %/% 144 +1
csk$day=csk$t10min %/% 144 +1
csk$day[52560]=365
duchy$day=duchy$t10min %/% 144 +1
hours=seq(1,144)/6
hours
hours=seq(0,143)/6
hours
thisday=data.frame(hours,csk[csk$day=day,2],duchy[duchy$day=day,2])
thisday=c(hours,csk[csk$day=day,2],duchy[duchy$day=day,2])
thisday=data.frame(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
thisday=c(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
head(thisday)
day=2
hours=seq(0,143)/6
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
head(thisday)
mypar=(1,1)
mypar(1,1)
mypar(2,1)
plot(hours,csk,xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type=l)
length(hours)
str(thisday)
plot(hours,thisday[,1],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type=l)
plot(hours,thisday[,1],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
max(duchy$day)
hours=seq(0,143)/6
for (day in 299:365){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
for (day in 1:105){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
table(duchy$day)
for (day in 288:365){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
for (day in 288:365){
print (day)
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
for (day in 288:365){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
print (day,length(thisday[,2]),length(thisday[,3]))
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
length(thisday[,2])
print (paste(day,length(thisday[,2]),length(thisday[,3])),sep=",")
for (day in 288:365){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
print (paste(day,length(thisday[,2]),length(thisday[,3])),sep=",")
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
tail(csk)
head(csk)
for (day in 288:364){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
print (paste(day,length(thisday[,2]),length(thisday[,3])),sep=",")
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
for (day in 2:105){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
for (day in 288:364){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
print (paste(day,length(thisday[,2]),length(thisday[,3])),sep=",")
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
for (day in 2:105){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
mypar(3,2)
for (day in 288:364){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
print (paste(day,length(thisday[,2]),length(thisday[,3])),sep=",")
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
for (day in 2:105){
thisday=cbind(hours,csk[csk$day==day,2],duchy[duchy$day==day,2])
plot(hours,thisday[,2],xlim=c(0,24),xlab="Time (h)",ylab="Insolation (W/m^2)",col="blue",type="l")
lines(hours,thisday[,3],col="red")
}
