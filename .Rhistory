h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
n=2
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p
n<-1
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
n<-1
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
n=2
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
for (n in 1:3){
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=1)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=1)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=1)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue",linetype="dashed")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue",linetype="dashed")
}
h1p
library(ggplot2)
news(Version == "1.0.1", package = "ggplot2")
(3950+2700)*1.2
(4+25.5+15)/(54)
(4+15.5+15)/(54)
library (downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
set.seed(1)
dat.ns=sample(bwt.nonsmoke,25)
dat.s=sample(bwt.smoke,25)
qnorm(.975)
N<-25
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
diff=dat.s-dat.ns
sd=sd(diff)
qt(.995,2*N-2)
tval<-t.test(dat.ns,dat.s)$statistic
tval
t.test(dat.ns,dat.s)
summ\ry(t.test(dat.ns,dat.s))
summary(t.test(dat.ns,dat.s))
qt(.975,2*N-2)
pt(2.1209,48)
2*pnorm(-abs(tval))
se=sd/sqrt(2*N)
tval<-diff/se
tval
diff=mean(dat.s-dat.ns)
sd=sd(diff)
se=sd/sqrt(2*N)
qt(.995,2*N-2)
qt(.975,2*N-2)
tval<-diff/se
tval
tval<-t.test(dat.ns,dat.s)$statistic
tval
2*pnorm(-abs(tval))
pt(tval,48,lower.tail=FALSE,)
2*pt(tval,48,lower.tail=FALSE,)
2*pnorm(tval,48,lower.tail=FALSE,)
2*pnorm(tval,lower.tail=FALSE,)
2*pnorm(tval,480,lower.tail=FALSE,)
2*pt(tval,480,lower.tail=FALSE,)
2*pt(tval,4800,lower.tail=FALSE,)
qt(.995,48)
2*pnorm(-abs(tval))
pnorm(.995)
qnorm(.995)
## PH525-1x-Week3-Exercises.R
## T-TEST EXERCISES
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
set.seed(1)
dat.ns<-sample(bwt.nonsmoke,25)
dat.s<-sample(bwt.smoke,25)
tval<-t.test(dat.ns,dat.s)$statistic
tval
# doing this manually (without t.test
N=25
set.seed(1)
dat.ns <- sample(bwt.nonsmoke , N)
dat.s <- sample(bwt.smoke , N)
X.ns <- mean(dat.ns)
sd.ns <- sd(dat.ns) # note use of sd,not popsd since this is a sample.
X.s <- mean(dat.s)
sd.s <- sd(dat.s)
sd.diff <- sqrt(sd.ns^2/N+sd.s^2/N)
tval <- (X.ns - X.s)/sd.diff
tval
pnorm(tval,lower.tail=FALSE)*2
qnorm(.995)*sd.diff
N<-25
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
X.ns <- mean(dat.ns)
sd.ns <- sd(dat.ns) # note use of sd,not popsd since this is a sample.
X.s <- mean(dat.s)
sd.s <- sd(dat.s)
sd.diff <- sqrt(sd.ns^2/N+sd.s^2/N)
tval <- (X.ns - X.s)/sd.diff
tval
tval<-t.dist(dat.s,dat.ns)
tval
tval<-tdist(dat.s,dat.ns)
tval<-t.dist(dat.s,dat.ns)
?t.
tval<-t.test(dat.s,dat.ns)
tval
2*pt(-abs(tval))
tval<-t.test(dat.s,dat.ns)
tval
2*pt(-abs(tval),48)
tval<-t.test(dat.s,dat.ns)$coefficient
tval
tval<-t.test(dat.s,dat.ns)$statistic
tval
qt(.995,48)*sd.diff
N<-5
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
t.test(dat.s,dat.ns)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
install.packages("yaml")
install.packages("digest")
load(iris)
data("iris")
str(iris)
library(swirl)
rmI(list=ls())
rm(list=ls())
sqrt(4)
swirl()
library(swirl)
swirl()
1
install.packages("UsingR")
library(UsingR)
data("father.son",package="UsingR")
str(father.son)
summary(father.son)
g <- 9.8 ##meters per second
n <- 25
tt <- seq(0,3.4,len=n) ##time in secs, t is a base function
f <- 56.67  - 0.5*g*tt^2
y <-  f + rnorm(n,sd=1)
X=cbind(1,tt,tt^2)
Beta=matrix(c(55,0,-5),3,1)
r=y- Beta%*%X
RSS=t(r)%*%r
betahat=solve(crossprod(X))%*%crossprod(X,y)
head(X)
head(y)
r=y-X%*%Beta
RSS=t(r)%*%r
betahat=solve(crossprod(X))%*%crossprod(X,y)
betahat
plot(tt,y,ylab="Distance in meters",xlab="Time in seconds")
lines(tt,f,col=2)
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
X
beta <- c(5, 2)
X%*%beta
X <- matrix(c(1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1),nrow=6)
rownames(X) <- c("a","a","b","b","c","c")
beta <- c(10,3,-3) # fitted betas
X%*%beta
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
A
A[3,3]
-2 * (A %*% y) [3]
A %*% y
numTrials<-10000
gfind <- function(N, alpha=0.01){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
gg
numTrials<-10000
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
gg[1]
-2 * (A %*% y) [3]
?replicate
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2 * (A %*% y) [3]
numTrials<-100000
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<--2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
numTrials<-2
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<--2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
numTrials<-2
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
gfind
numTrials<-2
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind())
mean(gg)
numTrials<-100000
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind())
mean(gg)
?sdev
?sd
numTrials<-100000
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind())
mean(gg)
sd(gg)
head(gg)
numTrials<-100000
set.seed(1)
gfind <- function(){
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind())
mean(gg)
sd(gg)
sqrt(sum((gg-mean(gg))^2)/numTrials
sqrt(sum((gg-mean(gg))^2))/numTrials
sqrt(sum((gg-mean(gg))^2)/numTrials)
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
numTrials<-10000
N =  50
set.seed(1)
betahats<-replicate(numTrials,
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
)
sd(betahats)
numTrials<-10000
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
})
sd(betahats)
betahats
betahats[1]
numTrials<-2
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
print (betahat)
})
sd(betahats)
numTrials<-2
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
print (betahat[2])
})
sd(betahats)
numTrials<-10000
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
#print (betahat[2])
})
sd(betahats[2])
numTrials<-10000
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
betahat[2]
})
sd(betahats)
mean( (y - mean(y))*(x-mean(x) ) )
cov(father.son)
setwd("H:/Rspace/RE_Community")
library("solaR")
###################################################
### Section "Solar Geometry"
###################################################
lat <- 37.2
SolD <- fSolD(lat,BTd=fBTd(mode="prom"))
SolI <- fSolI(SolD, sample="10 min", keep.night=FALSE)
### Figure 2
mon <- month.abb
p<-xyplot(r2d(AlS)~r2d(AzS),
groups=month,
data=SolI, type="l", col="black",
xlab=expression(psi[s]),ylab=expression(gamma[s]))
p + glayer({
idx <- round(length(x)/2+1)
panel.text(x[idx], y[idx], mon[group.value], pos=3, offset=0.2, cex=0.8)
})
### Declination with several methods
lat <- 37.2
BTd <- fBTd(mode="serie")
solStrous <- fSolD(lat, BTd, method="strous")
solSpencer <- fSolD(lat, BTd, method="spencer")
solCooper <- fSolD(lat, BTd, method="cooper")
solMichalsky <- fSolD(lat, BTd, method="michalsky")
decDif <- solMichalsky$decl - cbind(solStrous$decl, solSpencer$decl, solCooper$decl)
names(decDif) <- c("strous", "spencer", "cooper")
xyplot(decDif, auto.key=list(space="right"), superpose=TRUE, ylab="Declination difference")
## Example for the day no.100
BTd <- fBTd(mode="serie")
SolD<-fSolD(lat, BTd[100])
SolI<-fSolI(SolD, sample="hour")
G0d <- zoo(5000, index(SolD))
fCompD(SolD, G0d, corr = "Page")
fCompD(SolD, G0d, corr = "CPR")
## Example with the monthly average days
lat <- 37.2
sol<-calcSol(lat, fBTd(mode="prom"), sample="hour", keep.night=FALSE)
G0dm=c(2.766,3.491,4.494,5.912,6.989,7.742,7.919,7.027,5.369,3.562,2.814,2.179)*1000
Ta <- c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2)
BD<-readG0dm(G0dm=G0dm, Ta=Ta, lat=37.2)
compD<-fCompD(sol, BD, corr = "Page")
compI<-fCompI(sol, compD)
xyplot(G0+B0+D0~w|month,
data=compI, type="l",
xlab=expression(omega),
ylab="",
auto.key=list(space="right"))
