}
h1p
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=1)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=1)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue",linetype="dashed")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue",linetype="dashed")
}
h1p
library(ggplot2)
news(Version == "1.0.1", package = "ggplot2")
(3950+2700)*1.2
(4+25.5+15)/(54)
(4+15.5+15)/(54)
library (downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
set.seed(1)
dat.ns=sample(bwt.nonsmoke,25)
dat.s=sample(bwt.smoke,25)
qnorm(.975)
N<-25
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
diff=dat.s-dat.ns
sd=sd(diff)
qt(.995,2*N-2)
tval<-t.test(dat.ns,dat.s)$statistic
tval
t.test(dat.ns,dat.s)
summ\ry(t.test(dat.ns,dat.s))
summary(t.test(dat.ns,dat.s))
qt(.975,2*N-2)
pt(2.1209,48)
2*pnorm(-abs(tval))
se=sd/sqrt(2*N)
tval<-diff/se
tval
diff=mean(dat.s-dat.ns)
sd=sd(diff)
se=sd/sqrt(2*N)
qt(.995,2*N-2)
qt(.975,2*N-2)
tval<-diff/se
tval
tval<-t.test(dat.ns,dat.s)$statistic
tval
2*pnorm(-abs(tval))
pt(tval,48,lower.tail=FALSE,)
2*pt(tval,48,lower.tail=FALSE,)
2*pnorm(tval,48,lower.tail=FALSE,)
2*pnorm(tval,lower.tail=FALSE,)
2*pnorm(tval,480,lower.tail=FALSE,)
2*pt(tval,480,lower.tail=FALSE,)
2*pt(tval,4800,lower.tail=FALSE,)
qt(.995,48)
2*pnorm(-abs(tval))
pnorm(.995)
qnorm(.995)
## PH525-1x-Week3-Exercises.R
## T-TEST EXERCISES
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
set.seed(1)
dat.ns<-sample(bwt.nonsmoke,25)
dat.s<-sample(bwt.smoke,25)
tval<-t.test(dat.ns,dat.s)$statistic
tval
# doing this manually (without t.test
N=25
set.seed(1)
dat.ns <- sample(bwt.nonsmoke , N)
dat.s <- sample(bwt.smoke , N)
X.ns <- mean(dat.ns)
sd.ns <- sd(dat.ns) # note use of sd,not popsd since this is a sample.
X.s <- mean(dat.s)
sd.s <- sd(dat.s)
sd.diff <- sqrt(sd.ns^2/N+sd.s^2/N)
tval <- (X.ns - X.s)/sd.diff
tval
pnorm(tval,lower.tail=FALSE)*2
qnorm(.995)*sd.diff
N<-25
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
X.ns <- mean(dat.ns)
sd.ns <- sd(dat.ns) # note use of sd,not popsd since this is a sample.
X.s <- mean(dat.s)
sd.s <- sd(dat.s)
sd.diff <- sqrt(sd.ns^2/N+sd.s^2/N)
tval <- (X.ns - X.s)/sd.diff
tval
tval<-t.dist(dat.s,dat.ns)
tval
tval<-tdist(dat.s,dat.ns)
tval<-t.dist(dat.s,dat.ns)
?t.
tval<-t.test(dat.s,dat.ns)
tval
2*pt(-abs(tval))
tval<-t.test(dat.s,dat.ns)
tval
2*pt(-abs(tval),48)
tval<-t.test(dat.s,dat.ns)$coefficient
tval
tval<-t.test(dat.s,dat.ns)$statistic
tval
qt(.995,48)*sd.diff
N<-5
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
t.test(dat.s,dat.ns)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
install.packages("yaml")
install.packages("digest")
load(iris)
data("iris")
str(iris)
library(swirl)
rmI(list=ls())
rm(list=ls())
sqrt(4)
swirl()
library(swirl)
swirl()
1
install.packages("UsingR")
library(UsingR)
data("father.son",package="UsingR")
str(father.son)
summary(father.son)
g <- 9.8 ##meters per second
n <- 25
tt <- seq(0,3.4,len=n) ##time in secs, t is a base function
f <- 56.67  - 0.5*g*tt^2
y <-  f + rnorm(n,sd=1)
X=cbind(1,tt,tt^2)
Beta=matrix(c(55,0,-5),3,1)
r=y- Beta%*%X
RSS=t(r)%*%r
betahat=solve(crossprod(X))%*%crossprod(X,y)
head(X)
head(y)
r=y-X%*%Beta
RSS=t(r)%*%r
betahat=solve(crossprod(X))%*%crossprod(X,y)
betahat
plot(tt,y,ylab="Distance in meters",xlab="Time in seconds")
lines(tt,f,col=2)
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
X
beta <- c(5, 2)
X%*%beta
X <- matrix(c(1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1),nrow=6)
rownames(X) <- c("a","a","b","b","c","c")
beta <- c(10,3,-3) # fitted betas
X%*%beta
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
A
A[3,3]
-2 * (A %*% y) [3]
A %*% y
numTrials<-10000
gfind <- function(N, alpha=0.01){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
gg
numTrials<-10000
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
gg[1]
-2 * (A %*% y) [3]
?replicate
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2 * (A %*% y) [3]
numTrials<-100000
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<--2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
numTrials<-2
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<--2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
numTrials<-2
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind)
mean(gg)
gfind
numTrials<-2
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind())
mean(gg)
numTrials<-100000
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind())
mean(gg)
?sdev
?sd
numTrials<-100000
gfind <- function(){
set.seed(1)
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind())
mean(gg)
sd(gg)
head(gg)
numTrials<-100000
set.seed(1)
gfind <- function(){
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
gval<- -2 * (A %*% y) [3]
}
gg <- replicate(numTrials,gfind())
mean(gg)
sd(gg)
sqrt(sum((gg-mean(gg))^2)/numTrials
sqrt(sum((gg-mean(gg))^2))/numTrials
sqrt(sum((gg-mean(gg))^2)/numTrials)
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
numTrials<-10000
N =  50
set.seed(1)
betahats<-replicate(numTrials,
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
)
sd(betahats)
numTrials<-10000
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
})
sd(betahats)
betahats
betahats[1]
numTrials<-2
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
print (betahat)
})
sd(betahats)
numTrials<-2
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
print (betahat[2])
})
sd(betahats)
numTrials<-10000
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
#print (betahat[2])
})
sd(betahats[2])
numTrials<-10000
N =  50
set.seed(1)
betahats<-replicate(numTrials,{
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat =  lm(y~x)$coef
betahat[2]
})
sd(betahats)
mean( (y - mean(y))*(x-mean(x) ) )
cov(father.son)
| $\beta$ | <span style="color:blue">_power_</span>: $1-\beta$
rnorm(1)
rnorm(100)
(.8*.01)/(.96*.99+.8*.01)
(.8*.01)/(.096*.99+.8*.01)
?summary()
?summary
?summary()
help(summary)
help(summary)
help(sum)
man(summary)
?summary()
?sum()
source('H:/Rspace/RE_Community/Callywith_TPM1.R')
setwd("H:/Rspace/RE_Community")
## Callywith wind analysis
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(plotrix)
## read in data
dat.wide<-read.csv("callywith3year.csv",stringsAsFactors=FALSE)
# convert time to POSIXct
dat.wide$Timestamp<-dmy_hm(dat.wide$Timestamp)
#tidy the data
cw<-gather(dat.wide,height,V,V46:V20,-Dir)
rm(dat.wide)
cw46<-filter(cw,height=="V46")
cw32<-filter(cw,height=="V32")
cw20<-filter(cw,height=="V20")
## TPM 20
reference<-cw46
reference$bin<-floor(reference$V)+1
table(reference$bin)
sum(table(reference$bin))
maxBin=max(reference$bin)+1
tpm<-matrix(0, nrow = maxBin, ncol =maxBin)
spm<-numeric(maxBin)
cpm<-matrix(0, nrow = maxBin, ncol =maxBin)
for (i in 1:nrow(reference)){
tpm[reference$bin[i],reference$bin[i+1]] <-tpm[reference$bin[i],reference$bin[i+1]] + 1
}
tpm[1,]
print(tpm)
sum(tpm[1,])
for (i in 1 :nrow(tpm)){
spm[i]=sum(tpm[i,])
}
spm
sum(spm)
for (i in 1 :nrow(tpm)){
tpm[i,]=tpm[i,]/sum(tpm[i,])
}
for (i in 1 : nrow(tpm)){
for (j in 1 :ncol(tpm)){
cpm[i,j]=sum(tpm[i,1:j])
}
}
print (cpm)
v=numeric(nrow(reference))
v[1]=round((maxBin)*runif(1),0)+1
for (i in 2:nrow(reference)){
colIndex=runif(1)
j=1
while (cpm[round(v[i-1],0),j] < colIndex){
j=j+1
}
v[i]=j
}
cpm
summary(v)
summary(reference$bin)
v=v-1+runif(nrow(reference))
mean(v)-mean(reference$V)
sd(v)-sd(reference$V)
summary(v)
summary(reference$V)
library(MASS)
vFit<-fitdistr(v+.01, 'weibull')
print (vFit)
refFit<-fitdistr(reference$V+.01, 'weibull')
print(refFit)
hist(v,xlim=c(0,20),prob=TRUE)
d = dweibull(seq(0,20,.2),vFit$estimate[1],vFit$estimate[2])
points(seq(0,20,.2),d,type='l',col=2)
com<-data.frame(c("Time","V","P","D"))
rnorm(1,100)
x=seq(1,100)
y=sin(x)
plot(x,y)
str(dat.wide)
str(cw46)
summary(cw46)
head(cw46)
df<-cw46[1:10,1]
df
