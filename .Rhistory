n<-1
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
n<-1
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
n=2
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
for (n in 1:3){
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=2)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=1)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)))
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)))
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=1)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue")
}
h1p
library(ggplot2)
h1p<-ggplot(data=h1,aes(x=x,y=y,color="red"))+geom_line(size=1)
for (n in 1:3){
h1p<-h1p+geom_point(x=n*hl.C14,y=y0*exp(-n*log(2)),size=4)
h1p<-h1p+geom_segment(x=n*hl.C14,y=0,xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue",linetype="dashed")
h1p<-h1p+geom_segment(x=0,y=y0*exp(-n*log(2)),xend=n*hl.C14,yend=y0*exp(-n*log(2)),colour="blue",linetype="dashed")
}
h1p
library(ggplot2)
news(Version == "1.0.1", package = "ggplot2")
(3950+2700)*1.2
(4+25.5+15)/(54)
(4+15.5+15)/(54)
library (downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
set.seed(1)
dat.ns=sample(bwt.nonsmoke,25)
dat.s=sample(bwt.smoke,25)
qnorm(.975)
N<-25
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
diff=dat.s-dat.ns
sd=sd(diff)
qt(.995,2*N-2)
tval<-t.test(dat.ns,dat.s)$statistic
tval
t.test(dat.ns,dat.s)
summ\ry(t.test(dat.ns,dat.s))
summary(t.test(dat.ns,dat.s))
qt(.975,2*N-2)
pt(2.1209,48)
2*pnorm(-abs(tval))
se=sd/sqrt(2*N)
tval<-diff/se
tval
diff=mean(dat.s-dat.ns)
sd=sd(diff)
se=sd/sqrt(2*N)
qt(.995,2*N-2)
qt(.975,2*N-2)
tval<-diff/se
tval
tval<-t.test(dat.ns,dat.s)$statistic
tval
2*pnorm(-abs(tval))
pt(tval,48,lower.tail=FALSE,)
2*pt(tval,48,lower.tail=FALSE,)
2*pnorm(tval,48,lower.tail=FALSE,)
2*pnorm(tval,lower.tail=FALSE,)
2*pnorm(tval,480,lower.tail=FALSE,)
2*pt(tval,480,lower.tail=FALSE,)
2*pt(tval,4800,lower.tail=FALSE,)
qt(.995,48)
2*pnorm(-abs(tval))
pnorm(.995)
qnorm(.995)
## PH525-1x-Week3-Exercises.R
## T-TEST EXERCISES
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
set.seed(1)
dat.ns<-sample(bwt.nonsmoke,25)
dat.s<-sample(bwt.smoke,25)
tval<-t.test(dat.ns,dat.s)$statistic
tval
# doing this manually (without t.test
N=25
set.seed(1)
dat.ns <- sample(bwt.nonsmoke , N)
dat.s <- sample(bwt.smoke , N)
X.ns <- mean(dat.ns)
sd.ns <- sd(dat.ns) # note use of sd,not popsd since this is a sample.
X.s <- mean(dat.s)
sd.s <- sd(dat.s)
sd.diff <- sqrt(sd.ns^2/N+sd.s^2/N)
tval <- (X.ns - X.s)/sd.diff
tval
pnorm(tval,lower.tail=FALSE)*2
qnorm(.995)*sd.diff
N<-25
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
X.ns <- mean(dat.ns)
sd.ns <- sd(dat.ns) # note use of sd,not popsd since this is a sample.
X.s <- mean(dat.s)
sd.s <- sd(dat.s)
sd.diff <- sqrt(sd.ns^2/N+sd.s^2/N)
tval <- (X.ns - X.s)/sd.diff
tval
tval<-t.dist(dat.s,dat.ns)
tval
tval<-tdist(dat.s,dat.ns)
tval<-t.dist(dat.s,dat.ns)
?t.
tval<-t.test(dat.s,dat.ns)
tval
2*pt(-abs(tval))
tval<-t.test(dat.s,dat.ns)
tval
2*pt(-abs(tval),48)
tval<-t.test(dat.s,dat.ns)$coefficient
tval
tval<-t.test(dat.s,dat.ns)$statistic
tval
qt(.995,48)*sd.diff
N<-5
set.seed(1)
dat.ns=sample(bwt.nonsmoke,N)
dat.s=sample(bwt.smoke,N)
t.test(dat.s,dat.ns)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
library(dplyr)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
install.packages("yaml")
install.packages("digest")
load(iris)
data("iris")
str(iris)
library("solaR")
###################################################
### Section "Solar Geometry"
###################################################
lat <- 37.2
SolD <- fSolD(lat,BTd=fBTd(mode="prom"))
SolI <- fSolI(SolD, sample="10 min", keep.night=FALSE)
install.packages("solaR")
### Figure 2
mon <- month.abb
p<-xyplot(r2d(AlS)~r2d(AzS),
groups=month,
data=SolI, type="l", col="black",
xlab=expression(psi[s]),ylab=expression(gamma[s]))
p + glayer({
idx <- round(length(x)/2+1)
panel.text(x[idx], y[idx], mon[group.value], pos=3, offset=0.2, cex=0.8)
})
lat <- 37.2
SolD <- fSolD(lat,BTd=fBTd(mode="prom"))
SolI <- fSolI(SolD, sample="10 min", keep.night=FALSE)
library("solaR")
lat <- 37.2
SolD <- fSolD(lat,BTd=fBTd(mode="prom"))
SolI <- fSolI(SolD, sample="10 min", keep.night=FALSE)
### Figure 2
mon <- month.abb
p<-xyplot(r2d(AlS)~r2d(AzS),
groups=month,
data=SolI, type="l", col="black",
xlab=expression(psi[s]),ylab=expression(gamma[s]))
p + glayer({
idx <- round(length(x)/2+1)
panel.text(x[idx], y[idx], mon[group.value], pos=3, offset=0.2, cex=0.8)
})
lat <- 50
SolD <- fSolD(lat,BTd=fBTd(mode="prom"))
SolI <- fSolI(SolD, sample="10 min", keep.night=FALSE)
### Figure 2
mon <- month.abb
p<-xyplot(r2d(AlS)~r2d(AzS),
groups=month,
data=SolI, type="l", col="black",
xlab=expression(psi[s]),ylab=expression(gamma[s]))
p + glayer({
idx <- round(length(x)/2+1)
panel.text(x[idx], y[idx], mon[group.value], pos=3, offset=0.2, cex=0.8)
})
### Declination with several methods
lat <- 50
BTd <- fBTd(mode="serie")
solStrous <- fSolD(lat, BTd, method="strous")
solSpencer <- fSolD(lat, BTd, method="spencer")
solCooper <- fSolD(lat, BTd, method="cooper")
solMichalsky <- fSolD(lat, BTd, method="michalsky")
decDif <- solMichalsky$decl - cbind(solStrous$decl, solSpencer$decl, solCooper$decl)
names(decDif) <- c("strous", "spencer", "cooper")
xyplot(decDif, auto.key=list(space="right"), superpose=TRUE, ylab="Declination difference")
BTd <- fBTd(mode="serie")
SolD<-fSolD(lat, BTd[100])
SolI<-fSolI(SolD, sample="hour")
G0d <- zoo(5000, index(SolD))
fCompD(SolD, G0d, corr = "Page")
fCompD(SolD, G0d, corr = "CPR")
lat <- 50
sol<-calcSol(lat, fBTd(mode="prom"), sample="hour", keep.night=FALSE)
G0dm=c(2.766,3.491,4.494,5.912,6.989,7.742,7.919,7.027,5.369,3.562,2.814,2.179)*1000
Ta <- c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2)
BD<-readG0dm(G0dm=G0dm, Ta=Ta, lat=37.2)
compD<-fCompD(sol, BD, corr = "Page")
compI<-fCompI(sol, compD)
xyplot(G0+B0+D0~w|month,
data=compI, type="l",
xlab=expression(omega),
ylab="",
auto.key=list(space="right"))
data("helios")
names(helios)=c("date", "G0", "TempMax", "TempMin")
bd <- df2Meteo(helios, dates.col="date", lat=41, source="helios-IES", format="%Y/%m/%d")
bd
### Subsection "Meteorological data"
data("helios")
names(helios)=c("date", "G0", "TempMax", "TempMin")
bd <- df2Meteo(helios, dates.col="date", lat=50, source="helios-IES", format="%Y/%m/%d")
bd
library("sp")
library("maptools")
## http://solar.r-forge.r-project.org/data/SIAR.csv
SIAR <- read.csv("Data/SIAR.csv")
setwd("H:/Rspace/RE_Community")
library("sp")
library("maptools")
## http://solar.r-forge.r-project.org/data/SIAR.csv
SIAR <- read.csv("Data/SIAR.csv")
proj <- CRS("+proj=longlat +ellps=WGS84")
spSIAR <- SpatialPointsDataFrame(SIAR[, c(6, 7)], SIAR[, -c(6, 7)],
proj4str=proj)
unzip("Data/ESP_adm.zip", exdir="Data/ESP_adm")
mapaSHP <- readShapeLines("Data/ESP_adm/ESP_adm2.shp", proj4string=proj)
library("sp")
library("maptools")
install.packages("maptools")
library("sp")
library("maptools")
gpclibPermit()
library("sp")
library("maptools")
SIAR <- read.csv("Data/SIAR.csv")
proj <- CRS("+proj=longlat +ellps=WGS84")
spSIAR <- SpatialPointsDataFrame(SIAR[, c(6, 7)], SIAR[, -c(6, 7)],
proj4str=proj)
unzip("Data/ESP_adm.zip", exdir="Data/ESP_adm")
mapaSHP <- readShapeLines("Data/ESP_adm/ESP_adm2.shp", proj4string=proj)
p <- spplot(spSIAR["Comunidad"],
col.regions=brewer.pal(n=12, "Paired"),
key.space="right", scales=list(draw=TRUE))
p  + layer(sp.lines(mapaSHP, lwd=0.6))
p <- spplot(spSIAR["Comunidad"],
col.regions=brewer.pal(n=12, "Paired"),
key.space="right", scales=list(draw=TRUE))
p  + layer(sp.lines(mapaSHP, lwd=0.6))
### Figure 6
## readSIAR needs internet connection
Aranjuez <- readSIAR(28,3,"01/01/2009","31/12/2009")
## save(Aranjuez, file="Data/Aranjuez.RData")
?readSIAR
load("Data/Aranjuez.RData")
xyplot(G0~TempMedia|month, data=Aranjuez, type=c("p", "r"))
lat <- 41
sol <- calcSol(lat, BTd=indexD(Aranjuez), sample="hour")
Temp <- fTemp(sol,Aranjuez)
wTemp <- window(Temp, start=as.POSIXct("2009-03-01"), end=as.POSIXct("2009-03-31"))
xyplot(wTemp, col="black", ylab="T")+layer_(panel.xblocks(x, DoY, col=c("lightgray", "white")))
g0<-calcG0(lat=37.2,
modeRad="siar",
dataRad=list(prov=28,est=3,
start="01/01/2009", end="31/12/2009"))
### Figure 8
xyplot(g0)
lat <- 20.77
lon <- -156.9339
dat <- read.zoo("Data/NREL-Hawaii.csv",
col.names = c("date", "hour", "G0", "B", "D0", "Ta"),
index = list(1, 2),
FUN = function(d, h) as.POSIXct(paste(d, h), format = "%m/%d/%Y %H:%M", tz = "HST"),
FUN2 = function(x) local2Solar(x, lon),
header=TRUE, sep=",")
dat$B0 <- dat$G0-dat$D0
NRELMeteo <- zoo2Meteo(dat, lat=lat, source="NREL-La Ola-Lanai")
xyplot(NRELMeteo)
g0NREL <- calcG0(lat=lat, modeRad="bdI", dataRad=NRELMeteo, corr="none")
g0BRL <- calcG0(lat=lat, modeRad="bdI", dataRad=NRELMeteo, corr="BRL")
gef<-calcGef(lat=37.2, modeRad="prev", dataRad=g0, beta=30)
xyplot(Gef/G~cosTheta|month, data=gef, type=c("p", "smooth"), cex=0.4, alpha=0.5)
inclin <- data.frame(Gef=c(200,400,600,800,1000),Ta=25)
fProd(inclin)
inclin <- data.frame(Gef=800,Ta=30)
gen1 <- list(Nms = 10, Nmp = 11)
inv1 <- list(Ki = c(0.01,0.025,0.05), Pinv=25000, Vmin=420, Vmax=750, Gumb=20)
prod <- fProd(inclin, generator=gen1, inverter=inv1)
print(prod)
setwd("H:/Rspace/RE_Community")
source('H:/Rspace/RE_Community/Callywith_TPM1.R')
## Callywith wind analysis
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(plotrix)
## read in data
dat.wide<-read.csv("callywith3year.csv",stringsAsFactors=FALSE)
# convert time to POSIXct
dat.wide$Timestamp<-dmy_hm(dat.wide$Timestamp)
#tidy the data
cw<-gather(dat.wide,height,V,V46:V20,-Dir)
rm(dat.wide)
cw46<-filter(cw,height=="V46")
cw32<-filter(cw,height=="V32")
cw20<-filter(cw,height=="V20")
## TPM 20
reference<-cw20
reference$bin<-floor(reference$V)+1
table(reference$bin)
sum(table(reference$bin))
maxBin=max(reference$bin)+1
tpm<-matrix(0, nrow = maxBin, ncol =maxBin)
spm<-numeric(maxBin)
cpm<-matrix(0, nrow = maxBin, ncol =maxBin)
for (i in 1:nrow(reference)){
tpm[reference$bin[i],reference$bin[i+1]] <-tpm[reference$bin[i],reference$bin[i+1]] + 1
}
tpm[1,]
print(tpm)
sum(tpm[1,])
for (i in 1 :nrow(tpm)){
spm[i]=sum(tpm[i,])
}
spm
sum(spm)
for (i in 1 :nrow(tpm)){
tpm[i,]=tpm[i,]/sum(tpm[i,])
}
for (i in 1 : nrow(tpm)){
for (j in 1 :ncol(tpm)){
cpm[i,j]=sum(tpm[i,1:j])
}
}
print (cpm)
v=numeric(nrow(reference))
v[1]=round((maxBin)*runif(1),0)+1
for (i in 2:nrow(reference)){
colIndex=runif(1)
j=1
while (cpm[round(v[i-1],0),j] < colIndex){
j=j+1
}
v[i]=j
}
cpm
summary(v)
summary(reference$bin)
v=v-1+runif(nrow(reference))
mean(v)-mean(reference$V)
sd(v)-sd(reference$V)
summary(v)
summary(reference$V)
library(MASS)
vFit<-fitdistr(v+.01, 'weibull')
print (vFit)
refFit<-fitdistr(reference$V+.01, 'weibull')
print(refFit)
hist(v,xlim=c(0,20),prob=TRUE)
d = dweibull(seq(0,20,.2),vFit$estimate[1],vFit$estimate[2])
points(seq(0,20,.2),d,type='l',col=2)
plot(v[1:1000],type="l")
points(reference$V,type="l",col="red")
## TPM 20
reference<-cw46
reference$bin<-floor(reference$V)+1
table(reference$bin)
sum(table(reference$bin))
maxBin=max(reference$bin)+1
tpm<-matrix(0, nrow = maxBin, ncol =maxBin)
spm<-numeric(maxBin)
cpm<-matrix(0, nrow = maxBin, ncol =maxBin)
for (i in 1:nrow(reference)){
tpm[reference$bin[i],reference$bin[i+1]] <-tpm[reference$bin[i],reference$bin[i+1]] + 1
}
tpm[1,]
print(tpm)
sum(tpm[1,])
for (i in 1 :nrow(tpm)){
spm[i]=sum(tpm[i,])
}
spm
sum(spm)
for (i in 1 :nrow(tpm)){
tpm[i,]=tpm[i,]/sum(tpm[i,])
}
for (i in 1 : nrow(tpm)){
for (j in 1 :ncol(tpm)){
cpm[i,j]=sum(tpm[i,1:j])
}
}
print (cpm)
v=numeric(nrow(reference))
v[1]=round((maxBin)*runif(1),0)+1
for (i in 2:nrow(reference)){
colIndex=runif(1)
j=1
while (cpm[round(v[i-1],0),j] < colIndex){
j=j+1
}
v[i]=j
}
cpm
summary(v)
summary(reference$bin)
v=v-1+runif(nrow(reference))
mean(v)-mean(reference$V)
sd(v)-sd(reference$V)
summary(v)
summary(reference$V)
library(MASS)
vFit<-fitdistr(v+.01, 'weibull')
print (vFit)
refFit<-fitdistr(reference$V+.01, 'weibull')
print(refFit)
hist(v,xlim=c(0,20),prob=TRUE)
d = dweibull(seq(0,20,.2),vFit$estimate[1],vFit$estimate[2])
points(seq(0,20,.2),d,type='l',col=2)
plot(v[1:1000],type="l")
points(reference$V,type="l",col="red")
365*24*60/10
plot(v[1:52560],type="l")
points(reference$V,type="l",col="red")
365*24*60/120
plot(v[1:4380],type="l")
points(reference$V,type="l",col="red")
plot(v[100000:104380],type="l")
points(reference$V,type="l",col="red")
?interpolate
